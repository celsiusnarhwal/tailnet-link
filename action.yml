name: Tailnet Link
description: Connect your GitHub Action workflow to Tailscale
branding:
  icon: arrow-right-circle
  color: gray-dark
inputs:
  authkey:
    description: A Tailscale auth key or OAuth client secret.
    required: true
  tags:
    description: |
      A comma-separated list of tags to apply to nodes authenticated by this action.
    required: false
  version:
    description: The version of Tailscale to use.
    required: true
    default: latest
  extra-args:
    description: Optional additional arguments to `tailscale up`.
    required: false
  tailscaled-extra-args:
    description: Optional additional arguments to `tailscaled`.
    required: false
  hostname:
    description: A fixed machine name.
    required: false

runs:
  using: composite
  steps:
    - name: Set Up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Setup
      id: setup
      shell: python
      run: |
        import os
        import sys
        import uuid
        
        if sys.platform == "win32":
          tailscale = "./tailscale.exe"
          shell = "powershell"
        else:
          tailscale = "sudo tailscale"
          shell = "bash"

        print(f"TAILSCALE={tailscale}\nSHELL={shell}\nVENV={uuid.uuid4().hex}", file=open(os.getenv("GITHUB_ENV"), "a"))

    - name: Handle Inputs
      uses: gacts/run-and-post-run@v1
      with:
        run: |
          pipx install pew
          pew new ${{ env.VENV }} -d -r ${{ github.action_path}}/requirements.txt
          pew in ${{ env.VENV }} python ${{ github.action_path }}/inputs.py
        post: pew rm ${{ env.VENV }}
        shell: ${{ env.SHELL }}
      env:
        TS_AUTHKEY: ${{ inputs.authkey }}
        TS_TAGS: ${{ inputs.tags }}
        TS_EXTRA_ARGS: ${{ inputs.extra-args }}
        TS_TAILSCALED_EXTRA_ARGS: ${{ inputs.tailscaled-extra-args }}
        TS_HOSTNAME: ${{ inputs.hostname }}

    - name: Install Tailscale (Linux)
      if: ${{ runner.os == 'Linux' }}
      shell: ${{ env.SHELL }}
      run: curl -fsSL https://tailscale.com/install.sh | sh

    - name: Install Tailscale (macoS)
      if: ${{ runner.os == 'macOS' }}
      shell: ${{ env.SHELL }}
      run: brew install tailscale

    - name: Install Tailscale (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: ${{ env.SHELL }}
      run: choco install tailscale -y

    - name: Start tailscaled (macOS and Linux)
      if: ${{ runner.os != 'Windows' }}
      shell: ${{ env.SHELL }}
      run: sudo tailscaled ${{ env.TAILSCALED_ARGS }} &

#    - name: Connect to Tailscale (macOS and Linux)
#      if: ${{ runner.os != 'Windows' }}
#      uses: gacts/run-and-post-run@v1
#      with:
#        run: |
#          ${{ env.TAILSCALE }} up ${{ env.TAILSCALE_ARGS }}
#          echo "Connected to $(${{ env.TAILSCALE }} status --json --peers=false | jq -r .CurrentTailnet.Name) ($(${{ env.TAILSCALE }} ip -4))"
#        post: ${{ env.TAILSCALE }} logout
#        shell: ${{ env.SHELL }}

    - name: Connect to Tailscale
#      if: ${{ runner.os == 'Windows' }}
      uses: gacts/run-and-post-run@v1
      with:
        run: |
          ${{ env.TAILSCALE }} up ${{ env.TAILSCALE_ARGS }}
          echo "Connected to $(${{ env.TAILSCALE }} status --json --peers=false | jq -r .CurrentTailnet.Name) ($(${{ env.TAILSCALE }} ip -4))"
        post: ${{ env.TAILSCALE }} logout
        shell: ${{ env.SHELL }}
        working-directory: ${{ runner.os == 'Windows' && 'C:/Program Files/Tailscale' || '' }}
